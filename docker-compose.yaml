version: "3.9"

services:
  poster:
    image: 'ghcr.io/inst-api/poster:latest'
    restart: unless-stopped
    depends_on:
      - postgres
    ports:
      - "8090:8090" # REST
    #    healthcheck:
    #      test: ['CMD', 'curl', '-f', 'http://localhost:8000/live']
    #      interval: 1m
    #      timeout: 10s
    #      retries: 3
    #      start_period: 20s
    volumes:
      - ./tmp:/root/tmp
      - ./videos:/root/videos
    networks:
      - ompnw
  postgres:
    image: postgres:14.5
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "insta_poster", "-U", "docker" ]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: RqEGkWfvq2Lh8BXb
      POSTGRES_DB: insta_poster
      APP_DB_USER: docker
      APP_DB_PASS: dN5mYdDVKbuyq6ry
      APP_DB_NAME: insta_poster
    networks:
      - ompnw
    volumes:
      - ./scripts/init-database.sql:/docker-entrypoint-initdb.d/init-database.sql
      - ./pgdata:/var/lib/postgresql/data
  api:
    image: 'ghcr.io/inst-api/poster.python-api:latest'
    stdin_open: true
    tty: true
    ports:
      - "8000:8000"
    volumes:
      - ./instagrapi-rest:/app
    networks:
      - ompnw


volumes:
  pgdata:
    driver: local
networks:
  ompnw:
    driver: bridge