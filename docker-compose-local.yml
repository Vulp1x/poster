version: "3.9"

services:
  poster:
    build:
      context: .
      dockerfile: Debug.Dockerfile
      args:
        CONFIG_MODE: local_docker
    restart: unless-stopped
    #    command: ["./dlv", "--listen=:40000", "--headless=true", "--api-version=2", "--accept-multiclient", "exec", "./rest-api"]
    security_opt:
      - seccomp:unconfined
    cap_add:
      - SYS_PTRACE
    depends_on:
      - postgres
    ports:
      - "8090:8090" # REST
      - "40000:40000"
    volumes:
      - ./tmp:/root/tmp
      - ./videos:/root/videos
    networks:
      - ompnw
  postgres:
    image: postgres:14.5
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "insta_poster", "-U", "docker" ]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    ports:
      - "5435:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: insta_poster
      APP_DB_USER: postgres
      APP_DB_PASS: postgres
      APP_DB_NAME: insta_poster
    networks:
      - ompnw
    volumes:
      - ./scripts/init-database-local.sql:/docker-entrypoint-initdb.d/database.sql
      - ./pgdata:/var/lib/postgresql/data
  api:
    build:
      context: ./instagrapi-rest
      dockerfile: Dockerfile
    stdin_open: true
    tty: true
    ports:
      - "8000:8000"
    volumes:
      - ./instagrapi-rest:/app
    networks:
      - ompnw

volumes:
  pgdata:
    driver: local
networks:
  ompnw:
    driver: bridge