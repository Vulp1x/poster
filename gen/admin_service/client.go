// Code generated by goa v3.8.5, DO NOT EDIT.
//
// admin_service client
//
// Command:
// $ goa gen github.com/inst-api/poster/design

package adminservice

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "admin_service" service client.
type Client struct {
	AddManagerEndpoint  goa.Endpoint
	DropManagerEndpoint goa.Endpoint
}

// NewClient initializes a "admin_service" service client given the endpoints.
func NewClient(addManager, dropManager goa.Endpoint) *Client {
	return &Client{
		AddManagerEndpoint:  addManager,
		DropManagerEndpoint: dropManager,
	}
}

// AddManager calls the "add_manager" endpoint of the "admin_service" service.
// AddManager may return the following errors:
//   - "invalid-scopes" (type InvalidScopes)
//   - "unauthorized" (type Unauthorized)
//   - "user not found" (type UserNotFound)
//   - "bad request" (type BadRequest)
//   - "internal error" (type InternalError)
//   - error: internal error
func (c *Client) AddManager(ctx context.Context, p *AddManagerPayload) (err error) {
	_, err = c.AddManagerEndpoint(ctx, p)
	return
}

// DropManager calls the "drop_manager" endpoint of the "admin_service" service.
// DropManager may return the following errors:
//   - "invalid-scopes" (type InvalidScopes)
//   - "unauthorized" (type Unauthorized)
//   - "user not found" (type UserNotFound)
//   - "bad request" (type BadRequest)
//   - "internal error" (type InternalError)
//   - error: internal error
func (c *Client) DropManager(ctx context.Context, p *DropManagerPayload) (err error) {
	_, err = c.DropManagerEndpoint(ctx, p)
	return
}
