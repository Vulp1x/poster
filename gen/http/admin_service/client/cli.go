// Code generated by goa v3.8.5, DO NOT EDIT.
//
// admin_service HTTP client CLI support package
//
// Command:
// $ goa gen github.com/inst-api/poster/design

package client

import (
	"encoding/json"
	"fmt"
	"unicode/utf8"

	adminservice "github.com/inst-api/poster/gen/admin_service"
	goa "goa.design/goa/v3/pkg"
)

// BuildAddManagerPayload builds the payload for the admin_service add_manager
// endpoint from CLI flags.
func BuildAddManagerPayload(adminServiceAddManagerBody string, adminServiceAddManagerToken string) (*adminservice.AddManagerPayload, error) {
	var err error
	var body AddManagerRequestBody
	{
		err = json.Unmarshal([]byte(adminServiceAddManagerBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"login\": \"Repellendus odit culpa.\",\n      \"password\": \"51n\"\n   }'")
		}
		if utf8.RuneCountInString(body.Password) < 4 {
			err = goa.MergeErrors(err, goa.InvalidLengthError("body.password", body.Password, utf8.RuneCountInString(body.Password), 4, true))
		}
		if err != nil {
			return nil, err
		}
	}
	var token *string
	{
		if adminServiceAddManagerToken != "" {
			token = &adminServiceAddManagerToken
		}
	}
	v := &adminservice.AddManagerPayload{
		Login:    body.Login,
		Password: body.Password,
	}
	v.Token = token

	return v, nil
}

// BuildDropManagerPayload builds the payload for the admin_service
// drop_manager endpoint from CLI flags.
func BuildDropManagerPayload(adminServiceDropManagerManagerID string, adminServiceDropManagerToken string) (*adminservice.DropManagerPayload, error) {
	var err error
	var managerID string
	{
		managerID = adminServiceDropManagerManagerID
		err = goa.MergeErrors(err, goa.ValidateFormat("managerID", managerID, goa.FormatUUID))

		if err != nil {
			return nil, err
		}
	}
	var token *string
	{
		if adminServiceDropManagerToken != "" {
			token = &adminServiceDropManagerToken
		}
	}
	v := &adminservice.DropManagerPayload{}
	v.ManagerID = managerID
	v.Token = token

	return v, nil
}
