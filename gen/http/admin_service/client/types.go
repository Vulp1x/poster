// Code generated by goa v3.8.5, DO NOT EDIT.
//
// admin_service HTTP client types
//
// Command:
// $ goa gen github.com/inst-api/poster/design

package client

import (
	adminservice "github.com/inst-api/poster/gen/admin_service"
)

// AddManagerRequestBody is the type of the "admin_service" service
// "add_manager" endpoint HTTP request body.
type AddManagerRequestBody struct {
	Login    string `form:"login" json:"login" xml:"login"`
	Password string `form:"password" json:"password" xml:"password"`
}

// NewAddManagerRequestBody builds the HTTP request body from the payload of
// the "add_manager" endpoint of the "admin_service" service.
func NewAddManagerRequestBody(p *adminservice.AddManagerPayload) *AddManagerRequestBody {
	body := &AddManagerRequestBody{
		Login:    p.Login,
		Password: p.Password,
	}
	return body
}

// NewAddManagerBadRequest builds a admin_service service add_manager endpoint
// bad request error.
func NewAddManagerBadRequest(body string) adminservice.BadRequest {
	v := adminservice.BadRequest(body)

	return v
}

// NewAddManagerInvalidScopes builds a admin_service service add_manager
// endpoint invalid-scopes error.
func NewAddManagerInvalidScopes(body string) adminservice.InvalidScopes {
	v := adminservice.InvalidScopes(body)

	return v
}

// NewAddManagerUnauthorized builds a admin_service service add_manager
// endpoint unauthorized error.
func NewAddManagerUnauthorized(body string) adminservice.Unauthorized {
	v := adminservice.Unauthorized(body)

	return v
}

// NewAddManagerUserNotFound builds a admin_service service add_manager
// endpoint user not found error.
func NewAddManagerUserNotFound(body string) adminservice.UserNotFound {
	v := adminservice.UserNotFound(body)

	return v
}

// NewDropManagerBadRequest builds a admin_service service drop_manager
// endpoint bad request error.
func NewDropManagerBadRequest(body string) adminservice.BadRequest {
	v := adminservice.BadRequest(body)

	return v
}

// NewDropManagerInvalidScopes builds a admin_service service drop_manager
// endpoint invalid-scopes error.
func NewDropManagerInvalidScopes(body string) adminservice.InvalidScopes {
	v := adminservice.InvalidScopes(body)

	return v
}

// NewDropManagerUnauthorized builds a admin_service service drop_manager
// endpoint unauthorized error.
func NewDropManagerUnauthorized(body string) adminservice.Unauthorized {
	v := adminservice.Unauthorized(body)

	return v
}

// NewDropManagerUserNotFound builds a admin_service service drop_manager
// endpoint user not found error.
func NewDropManagerUserNotFound(body string) adminservice.UserNotFound {
	v := adminservice.UserNotFound(body)

	return v
}
