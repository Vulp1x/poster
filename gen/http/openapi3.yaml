openapi: 3.0.3
info:
  title: REST api for simple route app
  version: "1.0"
servers:
  - url: /
    description: Default server for rest-api
paths:
  /api/admin/driver:
    post:
      tags:
        - admin_service
      summary: add_manager admin_service
      description: admins could add drivers from main system
      operationId: admin_service#add_manager
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddManagerRequestBody'
            example:
              login: Quia voluptatem impedit mollitia.
              password: y3x
      responses:
        "200":
          description: OK response.
        "400":
          description: 'bad request: Bad Request response.'
          content:
            application/json:
              schema:
                type: string
                example: Dolores omnis enim exercitationem saepe.
        "401":
          description: 'unauthorized: Unauthorized response.'
          content:
            application/json:
              schema:
                type: string
                example: Praesentium adipisci unde molestiae alias.
        "403":
          description: 'invalid-scopes: Forbidden response.'
          content:
            application/json:
              schema:
                type: string
                example: Et est.
        "404":
          description: 'user not found: Not Found response.'
          content:
            application/json:
              schema:
                type: string
                example: Sunt ea ipsum.
      security:
        - jwt_header_Authorization:
            - driver
            - admin
  /api/admin/driver/{manager_id}:
    delete:
      tags:
        - admin_service
      summary: drop_manager admin_service
      description: admins could delete managers from main system
      operationId: admin_service#drop_manager
      parameters:
        - name: manager_id
          in: path
          description: id менеджера, которого необходимо удалить
          required: true
          schema:
            type: string
            description: id менеджера, которого необходимо удалить
            example: E31B6C92-4A10-2D9D-2B43-B3362900308F
            format: uuid
          example: EA2D3703-2B9D-E7C0-35B9-DB753C364369
      responses:
        "200":
          description: OK response.
        "400":
          description: 'bad request: Bad Request response.'
          content:
            application/json:
              schema:
                type: string
                example: Sequi nihil aspernatur dignissimos.
        "401":
          description: 'unauthorized: Unauthorized response.'
          content:
            application/json:
              schema:
                type: string
                example: Distinctio ex.
        "403":
          description: 'invalid-scopes: Forbidden response.'
          content:
            application/json:
              schema:
                type: string
                example: Fugit officiis.
        "404":
          description: 'user not found: Not Found response.'
          content:
            application/json: {}
        "500":
          description: Internal Server Error response.
      security:
        - jwt_header_Authorization:
            - driver
            - admin
  /api/profile:
    get:
      tags:
        - auth_service
      summary: profile auth_service
      description: get user profile
      operationId: auth_service#profile
      responses:
        "200":
          description: OK response.
        "400":
          description: 'bad request: Bad Request response.'
          content:
            application/json:
              schema:
                type: string
                example: Ad architecto aliquid.
        "401":
          description: 'unauthorized: Unauthorized response.'
          content:
            application/json: {}
        "404":
          description: 'user not found: Not Found response.'
          content:
            application/json:
              schema:
                type: string
                example: Aliquam magni beatae quia est aut.
        "500":
          description: 'internal error: Internal Server Error response.'
          content:
            application/json:
              schema:
                type: string
                example: Quas et aut nihil iste qui.
      security:
        - jwt_header_Authorization:
            - driver
            - admin
  /api/signin:
    post:
      tags:
        - auth_service
      summary: signin auth_service
      description: Creates a valid JWT
      operationId: auth_service#signin
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Creds'
              example:
                jwt: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
        "400":
          description: 'bad request: Bad Request response.'
          content:
            application/json:
              schema:
                type: string
                example: Eius cupiditate sed aut.
        "401":
          description: 'unauthorized: Unauthorized response.'
          content:
            application/json:
              schema:
                type: string
                example: Qui in vel quod veniam neque aperiam.
        "404":
          description: 'user not found: Not Found response.'
          content:
            application/json:
              schema:
                type: string
                example: Voluptatibus amet sit dolores vel modi.
        "500":
          description: 'internal error: Internal Server Error response.'
          content:
            application/json:
              schema:
                type: string
                example: Soluta eos non cum.
      security:
        - basic_header_Authorization: []
  /api/tasks/:
    get:
      tags:
        - tasks_service
      summary: list tasks tasks_service
      description: получить все задачи для текущего пользователя
      operationId: tasks_service#list tasks
      responses:
        "200":
          description: OK response.
        "400":
          description: 'bad request: Bad Request response.'
          content:
            application/json:
              schema:
                type: string
                example: Similique delectus commodi eligendi quos non.
        "401":
          description: 'unauthorized: Unauthorized response.'
          content:
            application/json: {}
        "404":
          description: 'task not found: Not Found response.'
          content:
            application/json: {}
        "500":
          description: 'internal error: Internal Server Error response.'
          content:
            application/json:
              schema:
                type: string
                example: Error quasi odio.
      security:
        - jwt_header_Authorization:
            - driver
            - admin
  /api/tasks/{task_id}/:
    get:
      tags:
        - tasks_service
      summary: get task tasks_service
      description: получить задачу по id
      operationId: tasks_service#get task
      parameters:
        - name: task_id
          in: path
          description: id задачи
          required: true
          schema:
            type: string
            description: id задачи
            example: Rerum maxime quasi quis.
          example: Vel odio quia aliquid.
      responses:
        "200":
          description: OK response.
        "400":
          description: 'bad request: Bad Request response.'
          content:
            application/json:
              schema:
                type: string
                example: Voluptatem ut nihil.
        "401":
          description: 'unauthorized: Unauthorized response.'
          content:
            application/json: {}
        "404":
          description: 'task not found: Not Found response.'
          content:
            application/json: {}
        "500":
          description: 'internal error: Internal Server Error response.'
          content:
            application/json:
              schema:
                type: string
                example: Esse qui.
      security:
        - jwt_header_Authorization:
            - driver
            - admin
  /api/tasks/{task_id}/start:
    post:
      tags:
        - tasks_service
      summary: start task tasks_service
      description: 'начать выполнение задачи '
      operationId: tasks_service#start task
      parameters:
        - name: task_id
          in: path
          description: id задачи
          required: true
          schema:
            type: string
            description: id задачи
            example: Saepe cumque eum.
          example: Cupiditate impedit sed dolor omnis.
      responses:
        "200":
          description: OK response.
        "400":
          description: 'bad request: Bad Request response.'
          content:
            application/json: {}
        "401":
          description: 'unauthorized: Unauthorized response.'
          content:
            application/json: {}
        "404":
          description: 'task not found: Not Found response.'
          content:
            application/json: {}
        "500":
          description: 'internal error: Internal Server Error response.'
          content:
            application/json:
              schema:
                type: string
                example: Autem est nam.
      security:
        - jwt_header_Authorization:
            - driver
            - admin
  /api/tasks/{task_id}/stop:
    post:
      tags:
        - tasks_service
      summary: stop task tasks_service
      description: 'остановить выполнение задачи '
      operationId: tasks_service#stop task
      parameters:
        - name: task_id
          in: path
          description: id задачи
          required: true
          schema:
            type: string
            description: id задачи
            example: Cupiditate ullam necessitatibus.
          example: Et maxime sit eaque.
      responses:
        "200":
          description: OK response.
        "400":
          description: 'bad request: Bad Request response.'
          content:
            application/json: {}
        "401":
          description: 'unauthorized: Unauthorized response.'
          content:
            application/json: {}
        "404":
          description: 'task not found: Not Found response.'
          content:
            application/json: {}
        "500":
          description: 'internal error: Internal Server Error response.'
          content:
            application/json:
              schema:
                type: string
                example: Repellendus voluptatem dolor aut optio.
      security:
        - jwt_header_Authorization:
            - driver
            - admin
  /api/tasks/{task_id}/upload:
    post:
      tags:
        - tasks_service
      summary: upload file tasks_service
      description: загрузить файл с пользователями, прокси
      operationId: tasks_service#upload file
      parameters:
        - name: task_id
          in: path
          description: id задачи, в которую загружаем пользователей/прокси
          required: true
          schema:
            type: string
            description: id задачи, в которую загружаем пользователей/прокси
            example: Est voluptatibus nostrum occaecati nulla unde dolor.
          example: Sint aut sit nihil maiores ex.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadFileRequestBody'
            example:
              bots:
                - advertising_id: 7D80331A-7620-D09D-7CCB-2EF87B797732
                  device_id: Tenetur sed ea excepturi delectus quasi.
                  family_device_id: 76FB876C-96AC-91E7-BD21-B0C2988DDF65
                  headers:
                    Ducimus voluptate hic dicta impedit.: Totam labore amet ut iure praesentium.
                  password: Quidem quis earum maxime omnis reiciendis adipisci.
                  phone_id: 1265498D-5A84-134A-1C7A-ED5B4B92788E
                  user_agent: Perspiciatis autem quo.
                  username: Autem est quia.
                  uuid: 5E3B665E-1239-9C12-9643-FFC1E6C04697
                - advertising_id: 7D80331A-7620-D09D-7CCB-2EF87B797732
                  device_id: Tenetur sed ea excepturi delectus quasi.
                  family_device_id: 76FB876C-96AC-91E7-BD21-B0C2988DDF65
                  headers:
                    Ducimus voluptate hic dicta impedit.: Totam labore amet ut iure praesentium.
                  password: Quidem quis earum maxime omnis reiciendis adipisci.
                  phone_id: 1265498D-5A84-134A-1C7A-ED5B4B92788E
                  user_agent: Perspiciatis autem quo.
                  username: Autem est quia.
                  uuid: 5E3B665E-1239-9C12-9643-FFC1E6C04697
                - advertising_id: 7D80331A-7620-D09D-7CCB-2EF87B797732
                  device_id: Tenetur sed ea excepturi delectus quasi.
                  family_device_id: 76FB876C-96AC-91E7-BD21-B0C2988DDF65
                  headers:
                    Ducimus voluptate hic dicta impedit.: Totam labore amet ut iure praesentium.
                  password: Quidem quis earum maxime omnis reiciendis adipisci.
                  phone_id: 1265498D-5A84-134A-1C7A-ED5B4B92788E
                  user_agent: Perspiciatis autem quo.
                  username: Autem est quia.
                  uuid: 5E3B665E-1239-9C12-9643-FFC1E6C04697
              proxies:
                - host: Eligendi accusantium enim.
                  login: In et assumenda voluptate deleniti ut aut.
                  password: Quod tenetur.
                  port: 4440880418486248045
                - host: Eligendi accusantium enim.
                  login: In et assumenda voluptate deleniti ut aut.
                  password: Quod tenetur.
                  port: 4440880418486248045
              targets:
                - user_id: 372918204077540257
                  username: Labore impedit repellat.
                - user_id: 372918204077540257
                  username: Labore impedit repellat.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UploadError'
                example:
                  - input: Non id omnis perspiciatis expedita.
                    line: 8997517691232061191
                    reason: Aut alias blanditiis provident voluptatem.
                    type: 2
                  - input: Non id omnis perspiciatis expedita.
                    line: 8997517691232061191
                    reason: Aut alias blanditiis provident voluptatem.
                    type: 2
              example:
                - input: Non id omnis perspiciatis expedita.
                  line: 8997517691232061191
                  reason: Aut alias blanditiis provident voluptatem.
                  type: 2
                - input: Non id omnis perspiciatis expedita.
                  line: 8997517691232061191
                  reason: Aut alias blanditiis provident voluptatem.
                  type: 2
                - input: Non id omnis perspiciatis expedita.
                  line: 8997517691232061191
                  reason: Aut alias blanditiis provident voluptatem.
                  type: 2
        "400":
          description: 'bad request: Bad Request response.'
          content:
            application/json:
              schema:
                type: string
                example: Natus natus totam qui voluptatum.
        "401":
          description: 'unauthorized: Unauthorized response.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UploadError'
                example:
                  - input: Non id omnis perspiciatis expedita.
                    line: 8997517691232061191
                    reason: Aut alias blanditiis provident voluptatem.
                    type: 2
                  - input: Non id omnis perspiciatis expedita.
                    line: 8997517691232061191
                    reason: Aut alias blanditiis provident voluptatem.
                    type: 2
        "404":
          description: 'task not found: Not Found response.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UploadError'
                example:
                  - input: Non id omnis perspiciatis expedita.
                    line: 8997517691232061191
                    reason: Aut alias blanditiis provident voluptatem.
                    type: 2
                  - input: Non id omnis perspiciatis expedita.
                    line: 8997517691232061191
                    reason: Aut alias blanditiis provident voluptatem.
                    type: 2
                  - input: Non id omnis perspiciatis expedita.
                    line: 8997517691232061191
                    reason: Aut alias blanditiis provident voluptatem.
                    type: 2
        "500":
          description: 'internal error: Internal Server Error response.'
          content:
            application/json:
              schema:
                type: string
                example: Accusamus repudiandae mollitia.
      security:
        - jwt_header_Authorization:
            - driver
            - admin
  /api/tasks/draft:
    post:
      tags:
        - tasks_service
      summary: create task draft tasks_service
      description: создать драфт задачи
      operationId: tasks_service#create task draft
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskDraftRequestBody'
            example:
              post_image: Voluptatibus autem.
              text_template: Dolor nesciunt nisi aperiam deserunt aut.
              title: Excepturi eos aspernatur.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: string
                description: task_id для созданной задачи
                example: 77DFBD55-EC3C-CF64-7021-5A80D932517B
                format: uuid
              example: 9A05BD8A-CA8D-335E-C26E-14DB8FEBAB04
        "400":
          description: 'bad request: Bad Request response.'
          content:
            application/json:
              schema:
                type: string
                example: Cum nisi consequatur atque dolorem est dignissimos.
        "401":
          description: 'unauthorized: Unauthorized response.'
          content:
            application/json:
              schema:
                type: string
                description: task_id для созданной задачи
                example: 233374F1-297F-8711-5FC3-4F6B3731AD63
                format: uuid
        "404":
          description: 'task not found: Not Found response.'
          content:
            application/json:
              schema:
                type: string
                description: task_id для созданной задачи
                example: 2AE5027E-EF4C-E00D-314E-1CB4449A11C0
                format: uuid
        "500":
          description: 'internal error: Internal Server Error response.'
          content:
            application/json:
              schema:
                type: string
                example: Tenetur provident veritatis veniam.
      security:
        - jwt_header_Authorization:
            - driver
            - admin
components:
  schemas:
    AddManagerRequestBody:
      type: object
      properties:
        login:
          type: string
          example: Excepturi ut eligendi.
        password:
          type: string
          example: yal
          minLength: 4
      example:
        login: Veniam et amet saepe.
        password: d3c
      required:
        - login
        - password
    BotAccount:
      type: object
      properties:
        advertising_id:
          type: string
          description: adv id
          example: 7F641448-35F7-7B05-AFB4-8DFCC48CED66
          format: uuid
        device_id:
          type: string
          description: 'main id, ex: android-0d735e1f4db26782'
          example: Ratione et magnam pariatur suscipit.
        family_device_id:
          type: string
          example: D358BA94-28F1-C0F1-EA4E-E3BFBD8A6AE2
          format: uuid
        headers:
          type: object
          example:
            Mollitia nemo quis.: Sapiente repellendus sint.
            Omnis ipsam distinctio modi.: Voluptatibus voluptatem.
            Unde libero aperiam.: Omnis temporibus commodi iure modi.
          additionalProperties:
            type: string
            example: Sed voluptatum hic omnis qui iste.
        password:
          type: string
          description: login
          example: Quas voluptatem quidem reiciendis et corporis reiciendis.
        phone_id:
          type: string
          description: phone_id
          example: 1576BB1F-D21C-05AD-6677-73725A387FA6
          format: uuid
        user_agent:
          type: string
          description: user agent header
          example: Tenetur tenetur qui culpa tempore.
        username:
          type: string
          description: login
          example: Quis in.
        uuid:
          type: string
          example: A8E7C55C-B3EA-B228-EF84-9DB3D55D57A4
          format: uuid
      example:
        advertising_id: F25C441B-B3AA-5871-1077-53EACA084D5A
        device_id: Ex id corrupti non et aut.
        family_device_id: E058AD50-5D7F-E9A8-E010-D33044724992
        headers:
          Illo voluptatem sunt aperiam.: Id quasi repellendus et.
          Provident consectetur voluptatum tempore vero.: Distinctio consequatur sed consequuntur soluta.
        password: Et qui molestias dolorem.
        phone_id: CEF3CAF7-AB82-083A-2F08-9497BE6B7488
        user_agent: Nemo eius.
        username: Qui ut ut unde autem repellendus recusandae.
        uuid: 6D98E750-AE3D-1948-4270-2B4874F82503
      required:
        - username
        - password
        - user_agent
        - device_id
        - uuid
        - phone_id
        - advertising_id
        - family_device_id
        - headers
    CreateTaskDraftRequestBody:
      type: object
      properties:
        post_image:
          type: string
          description: фотография для постов
          example: Dolor doloremque.
        text_template:
          type: string
          description: шаблон для подписи под постом
          example: Fugit quibusdam expedita et.
        title:
          type: string
          description: название задачи
          example: Nihil expedita consequatur.
      example:
        post_image: Voluptatem vero molestias.
        text_template: Reprehenderit omnis similique ratione.
        title: Voluptatem doloremque.
      required:
        - title
        - text_template
        - post_image
    Creds:
      type: object
      properties:
        jwt:
          type: string
          description: JWT token
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      example:
        jwt: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      required:
        - jwt
    Proxy:
      type: object
      properties:
        host:
          type: string
          description: адрес прокси
          example: Quia error vel quos.
        login:
          type: string
          example: Porro rerum aut laboriosam.
        password:
          type: string
          example: Ea sequi consequatur aut velit odit ut.
        port:
          type: integer
          description: номер порта
          example: 84859098339370993
          format: int64
      example:
        host: Doloribus repellat voluptas placeat non ut.
        login: Facere velit ex et qui dicta corrupti.
        password: Ut incidunt cumque similique.
        port: 218032170587342579
      required:
        - host
        - port
        - login
        - password
    TargetUser:
      type: object
      properties:
        user_id:
          type: integer
          description: instagram user id
          example: 7626817135828888699
          format: int64
        username:
          type: string
          description: instagram username
          example: Voluptatem aut ea sunt pariatur.
      example:
        user_id: 1265749063732130389
        username: Animi perspiciatis quaerat in sint.
      required:
        - username
        - user_id
    UploadError:
      type: object
      properties:
        input:
          type: string
          description: номер порта
          example: Et autem quasi aliquid voluptas.
        line:
          type: integer
          example: 5346004466247460411
          format: int64
        reason:
          type: string
          example: Quod excepturi provident qui deserunt.
        type:
          type: integer
          description: |2-
             1 - список ботов
                2 - список прокси
                3 - список получателей рекламы
          example: 2
          enum:
            - 1
            - 2
            - 3
      example:
        input: Earum quia laborum sequi dicta.
        line: 3086394925635416340
        reason: Ipsam aut.
        type: 3
      required:
        - type
        - line
        - input
        - reason
    UploadFileRequestBody:
      type: object
      properties:
        bots:
          type: array
          items:
            $ref: '#/components/schemas/BotAccount'
          description: список ботов
          example:
            - advertising_id: 7D80331A-7620-D09D-7CCB-2EF87B797732
              device_id: Tenetur sed ea excepturi delectus quasi.
              family_device_id: 76FB876C-96AC-91E7-BD21-B0C2988DDF65
              headers:
                Ducimus voluptate hic dicta impedit.: Totam labore amet ut iure praesentium.
              password: Quidem quis earum maxime omnis reiciendis adipisci.
              phone_id: 1265498D-5A84-134A-1C7A-ED5B4B92788E
              user_agent: Perspiciatis autem quo.
              username: Autem est quia.
              uuid: 5E3B665E-1239-9C12-9643-FFC1E6C04697
            - advertising_id: 7D80331A-7620-D09D-7CCB-2EF87B797732
              device_id: Tenetur sed ea excepturi delectus quasi.
              family_device_id: 76FB876C-96AC-91E7-BD21-B0C2988DDF65
              headers:
                Ducimus voluptate hic dicta impedit.: Totam labore amet ut iure praesentium.
              password: Quidem quis earum maxime omnis reiciendis adipisci.
              phone_id: 1265498D-5A84-134A-1C7A-ED5B4B92788E
              user_agent: Perspiciatis autem quo.
              username: Autem est quia.
              uuid: 5E3B665E-1239-9C12-9643-FFC1E6C04697
            - advertising_id: 7D80331A-7620-D09D-7CCB-2EF87B797732
              device_id: Tenetur sed ea excepturi delectus quasi.
              family_device_id: 76FB876C-96AC-91E7-BD21-B0C2988DDF65
              headers:
                Ducimus voluptate hic dicta impedit.: Totam labore amet ut iure praesentium.
              password: Quidem quis earum maxime omnis reiciendis adipisci.
              phone_id: 1265498D-5A84-134A-1C7A-ED5B4B92788E
              user_agent: Perspiciatis autem quo.
              username: Autem est quia.
              uuid: 5E3B665E-1239-9C12-9643-FFC1E6C04697
        proxies:
          type: array
          items:
            $ref: '#/components/schemas/Proxy'
          description: список проксей для использования
          example:
            - host: Eligendi accusantium enim.
              login: In et assumenda voluptate deleniti ut aut.
              password: Quod tenetur.
              port: 4440880418486248045
            - host: Eligendi accusantium enim.
              login: In et assumenda voluptate deleniti ut aut.
              password: Quod tenetur.
              port: 4440880418486248045
            - host: Eligendi accusantium enim.
              login: In et assumenda voluptate deleniti ut aut.
              password: Quod tenetur.
              port: 4440880418486248045
            - host: Eligendi accusantium enim.
              login: In et assumenda voluptate deleniti ut aut.
              password: Quod tenetur.
              port: 4440880418486248045
        targets:
          type: array
          items:
            $ref: '#/components/schemas/TargetUser'
          description: список аккаунтов, которым показать надо рекламу
          example:
            - user_id: 372918204077540257
              username: Labore impedit repellat.
            - user_id: 372918204077540257
              username: Labore impedit repellat.
            - user_id: 372918204077540257
              username: Labore impedit repellat.
      example:
        bots:
          - advertising_id: 7D80331A-7620-D09D-7CCB-2EF87B797732
            device_id: Tenetur sed ea excepturi delectus quasi.
            family_device_id: 76FB876C-96AC-91E7-BD21-B0C2988DDF65
            headers:
              Ducimus voluptate hic dicta impedit.: Totam labore amet ut iure praesentium.
            password: Quidem quis earum maxime omnis reiciendis adipisci.
            phone_id: 1265498D-5A84-134A-1C7A-ED5B4B92788E
            user_agent: Perspiciatis autem quo.
            username: Autem est quia.
            uuid: 5E3B665E-1239-9C12-9643-FFC1E6C04697
          - advertising_id: 7D80331A-7620-D09D-7CCB-2EF87B797732
            device_id: Tenetur sed ea excepturi delectus quasi.
            family_device_id: 76FB876C-96AC-91E7-BD21-B0C2988DDF65
            headers:
              Ducimus voluptate hic dicta impedit.: Totam labore amet ut iure praesentium.
            password: Quidem quis earum maxime omnis reiciendis adipisci.
            phone_id: 1265498D-5A84-134A-1C7A-ED5B4B92788E
            user_agent: Perspiciatis autem quo.
            username: Autem est quia.
            uuid: 5E3B665E-1239-9C12-9643-FFC1E6C04697
        proxies:
          - host: Eligendi accusantium enim.
            login: In et assumenda voluptate deleniti ut aut.
            password: Quod tenetur.
            port: 4440880418486248045
          - host: Eligendi accusantium enim.
            login: In et assumenda voluptate deleniti ut aut.
            password: Quod tenetur.
            port: 4440880418486248045
          - host: Eligendi accusantium enim.
            login: In et assumenda voluptate deleniti ut aut.
            password: Quod tenetur.
            port: 4440880418486248045
        targets:
          - user_id: 372918204077540257
            username: Labore impedit repellat.
          - user_id: 372918204077540257
            username: Labore impedit repellat.
          - user_id: 372918204077540257
            username: Labore impedit repellat.
          - user_id: 372918204077540257
            username: Labore impedit repellat.
      required:
        - bots
        - proxies
        - targets
  securitySchemes:
    basic_header_Authorization:
      type: http
      description: Basic authentication used to authenticate security principal during signin
      scheme: basic
    jwt_header_Authorization:
      type: http
      description: Secures endpoint by requiring a valid JWT token retrieved via the signin endpoint. Supports scopes "api:read" and "api:write".
      scheme: bearer
tags:
  - name: admin_service
    description: The secured service exposes endpoints that require valid authorization credentials.
  - name: auth_service
    description: The secured service exposes endpoints that require valid authorization credentials.
  - name: tasks_service
    description: сервис для создания, редактирования и работы с задачами (рекламными компаниями)
